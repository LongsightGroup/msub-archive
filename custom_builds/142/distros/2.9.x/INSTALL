Installing CLE 2.7/2.8 from Source
==================================



    Prerequisites
    -------------

    - CLE 2.8 Source Code: Download the source bundle from RSN or the rSmart website via request from http://www.rsmart.com/assets/rSmart-CLE-2.8.0.0-source.tar.bz2. The 'cle' folder within the main folder created where this file is unzipped will be referred to as cle.src throughout the rest of this document.

    - Tomcat Application Server: Download & untar/unzip Tomcat 5.5.33 from http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.33/bin/apache-tomcat-5.5.33.tar.gz.  Where this file is unzipped will be referred to as tomcat.home throughout the rest of this document.

    - Java JDK 6: Sun JDK 6.x is the recommended version to use although version 5.0.x will still technically work.  Please note that Java 5 is past its end-of-life and will no longer have maintenance releases so cannot be recommended for production use.  On Linux with JDK 6, you may run into an open files limit issue if your limit is something like 1024, and this will need to be increased to 3072 or higher to avoid the problem. This can be fixed in either the tomcat init script with a 'ulimit -n 8192' or in /etc/security/limits.conf for a system-wide change.
    
    - Maven: Maven 2.0.10 or higher is required to be installed in order to build and deploy CLE from source, although the current release version of 2.2.1 is recommended.

    See http://maven.apache.org/download.html and http://java.sun.com/javase/downloads to download these tools.
    CLE 2.7/2.8 is tested on Linux & Windows running against MySQL 5.0.x and 5.1.x and Oracle 10g.

    If you come across an installation issue not addressed in this document, the Sakai community also has installation instructions that may be useful for you.  For 2.8, they are located at https://confluence.sakaiproject.org/display/DOC/Sakai+CLE+2.8+release+notes


    Configuring Tomcat
    ------------------

    We highly recommend starting with a clean copy of tomcat for this release.  This will ensure no old artifacts are accidentally left when the new code is deployed.  If not starting clean, then please delete all deployed artifacts from the current tomcat before proceeding.  However, the newer releases have bug & security fixes in them, so it's recommended to start clean with the latest 5.5.x version, currently 5.5.33. (5.5.34 has not been tested, but likely is fine to use as well).

    Copy setenv.sh from cle.src/reference/demo/tomcat/bin directory to tomcat.home/bin directory and review the settings for your installation (memory, java_home, timezone, etc.).  If you are in the same timezone your server is, you can ignore that setting.  Ensure the file is executable (e.g., chmod u+x 755)

    Copy the appropriate database driver to tomcat.home/common/lib directory.  If you're using MySQL 5.0.x, use the latest 5.1.x driver or legacy version 5.0.8+.  For Oracle, use the latest version of ojdbc14.jar that is compatible with your specific version of the server.  Version 10.2.x or higher is recommended.  See http://www.mysql.com/downloads/connector/j or http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc_10201.html for further information.

    Edit server.xml in tomcat.home/conf directory to make the following changes:

        * include URIEncoding="UTF-8" in http (8080) and ajp (8009) connector definitions (lines 94 & 119)
        * ensure shutdown port uniqueness if running > 1 tomcat on a machine (line 30)
        * optionally comment out the http connector section if using mod_jk

    Copy index.html from cle.src/reference/demo directory to tomcat.home/webapps/ROOT directory to enable automatic redirection to <hostname>:<port>/xsl-portal.

    Copy cle.src/reference/library/src/webapp/icon/favicon.ico to tomcat.home/webapps/ROOT to display the CLE logo in the browser's address bar.

    Install & Update Properties Files
    ---------------------------------

    Make a directory called sakai in tomcat.home and copy local.properties and sakai.properties from cle.src/../config directory to tomcat.home/sakai directory. Copy the contents of local.properties.optional to the end of local.properties.  This file contains database connection info and some other optional settings that can be configured if applicable.
    
    Review all entries in local.properties and edit to have appropriate values for your installation. Examples of settings include server URL, server ID, database information, mail server and dns addresses, Melete (Lessons) paths, etc. Make sure that the Melete paths in local.properties file are absolute paths pointing to tomcat.home/melete.  Comments in the file will assist you.  Also, samigo.answerUploadRepositoryPath is another property that needs an absolute pathname and is easy to overlook.

    Create file storage area
    ------------------------

    Create a directory called 'files' somewhere outside tomcat.home, perhaps as a sibling to it or on a SAN area that's NFS exported to the application server machine.  In it, you will create a number of subdirectories & copy in some static files.  This is detailed below and this directory is referred to as '<files>'.  To start, create a directory inside <files> called 'sam' with subdirectory 'uploads' in it.


    Configure Melete
    ----------------

    In <files>, create a melete directory with the following directory structure:

        * packagefiles
        * uploads

    Copy all files and directories from cle.src/melete/var/melete/packagefiles to <files>/melete/packagefiles directory.


    Configure jForum
    ----------------

    In <files>, create a jforum directory with the following directory structure:

        * images/avatar
        * uploads
        * packagefiles

    Copy all files and directories from cle.src/jforum/var/jforum/packagefiles to <files>/jforum/packagefiles directory.
    Copy all files and directories under cle.src/jforum/jforum-images/var/jforum_images to etudes.jforum.avatar.path
    Copy cle.src/jforum/jforum-images/jforum-images.xml file to tomcat.home/conf/Catalina/localhost.  Adjust the docBase parameter to be <files>/jforum.


    <files> structure summary
    -------------------------
    When complete, the <files> area should have the following directories & subdiretories in it.  Once tomcat is started for the first time, additional directories will be created automatically.
        jforum/images/avatar
        jforum/uploads
        jforum/packagefiles/packagefilesscorm
        melete/uploads
        melete/packagefiles
        melete/packagefiles/packagefilesscorm
        sam/uploads

    Build & Deploy the Code 
    -----------------------

    Execute the following  from the cle.src directory. This will build and deploy the CLE.

    mvn -Dmaven.tomcat.home=<tomcat.home> -Dmaven.test.skip=true -Xmx1g -XX:MaxPermSize=256m install sakai:deploy

    Start up Tomcat
    ---------------

    cd into tomcat.home/bin and execute ./startup.sh to start tomcat.  We recommend tailing the catalina.out file to watch for errors upon startup (tail -F tomcat.home/logs/catalina.out)

     
    Notes on Clustering
    -------------------

    These instructions have assumed that you are building and deploying CLE in a non-clustered environment (one tomcat server). For a clustered environment, several changes are necessary.  These instructions assume you have installed a separate instance of the CLE into separate Tomcat areas by repeating the instructions above.  Once that's complete, you'll have to make the following changes to each tomcat instance as follows:
 
    In local.properties, set the paths for CLE resources, archives, Melete, jForum, Samigo uploads, search files, etc. in local.properties to a shared location that will be accessible and writeable by all Tomcat servers.  Any settings that specify file locations need to be updated.
 
    For JForum files, change the following:
    * update docBase path in tomcat.home/conf/Catalina/localhost/jforum-images.xml to <shared-files>/jforum

    Finally, serverURL in local.properties needs to be the same for all tomcats, and serverId needs to be unique among all tomcat servers. jvmRoute in <tomcat.home>/conf/server.xml needs to be equal to serverId as well if using mod_jk for load balancing and the tomcats are on the same machine (same OS).
